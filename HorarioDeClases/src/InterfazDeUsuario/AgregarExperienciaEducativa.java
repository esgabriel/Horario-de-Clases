/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazDeUsuario;

import horariodeclases.Archivo;
import horariodeclases.Horario;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TheHu
 */
public class AgregarExperienciaEducativa extends javax.swing.JInternalFrame {

    /**
     * Creates new form AgregarExperienciaEducativaPrueba
     */
    public AgregarExperienciaEducativa() {

        initComponents();
        actualizarTabla();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxViernes = new javax.swing.JCheckBox();
        botonAgregar = new javax.swing.JButton();
        campoHora = new javax.swing.JTextField();
        botonCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoEE = new javax.swing.JTextField();
        campoSalon = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoDocente = new javax.swing.JTextField();
        boxMiercoles = new javax.swing.JCheckBox();
        boxJueves = new javax.swing.JCheckBox();
        boxMartes = new javax.swing.JCheckBox();
        boxLunes = new javax.swing.JCheckBox();
        boxTodosLosDias = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorario = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEE = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1020, 580));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boxViernes.setText("Viernes");
        boxViernes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxViernesActionPerformed(evt);
            }
        });
        getContentPane().add(boxViernes, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, -1, -1));

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 424, -1, -1));

        campoHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoHoraKeyTyped(evt);
            }
        });
        getContentPane().add(campoHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 70, -1));

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(botonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 424, -1, -1));

        jLabel3.setText("Hora");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        campoEE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoEEKeyTyped(evt);
            }
        });
        getContentPane().add(campoEE, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 168, 29));

        campoSalon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoSalonKeyTyped(evt);
            }
        });
        getContentPane().add(campoSalon, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 72, -1));

        jLabel1.setText("Experiencia Educativa");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel4.setText("Salon");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));

        jLabel2.setText("Docente");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        campoDocente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoDocenteMouseClicked(evt);
            }
        });
        campoDocente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoDocenteKeyTyped(evt);
            }
        });
        getContentPane().add(campoDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 180, -1));

        boxMiercoles.setText("Miercoles");
        boxMiercoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxMiercolesActionPerformed(evt);
            }
        });
        getContentPane().add(boxMiercoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        boxJueves.setText("Jueves");
        boxJueves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxJuevesActionPerformed(evt);
            }
        });
        getContentPane().add(boxJueves, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        boxMartes.setText("Martes");
        boxMartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxMartesActionPerformed(evt);
            }
        });
        getContentPane().add(boxMartes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, -1, -1));

        boxLunes.setText("Lunes");
        boxLunes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxLunesActionPerformed(evt);
            }
        });
        getContentPane().add(boxLunes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, -1, -1));

        boxTodosLosDias.setText("Todos los d√≠as");
        boxTodosLosDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxTodosLosDiasActionPerformed(evt);
            }
        });
        getContentPane().add(boxTodosLosDias, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        tablaHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hora", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes"
            }
        ));
        tablaHorario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaHorario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 550, 210));

        tablaEE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Experiencia Educativa", "Docente"
            }
        ));
        jScrollPane2.setViewportView(tablaEE);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, 460, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        boxTodosLosDias.setSelected(false);
        boxLunes.setSelected(false);
        boxMartes.setSelected(false);
        boxMiercoles.setSelected(false);
        boxJueves.setSelected(false);
        boxViernes.setSelected(false);
        campoEE.setText("");
        campoDocente.setText("");
        campoHora.setText("");
        campoSalon.setText("");
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void boxMiercolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxMiercolesActionPerformed
        // TODO add your handling code here:
        if (!boxMiercoles.isSelected()) {
            boxTodosLosDias.setSelected(false);
        } else {
            if (boxLunes.isSelected() && boxMartes.isSelected() && boxViernes.isSelected() && boxJueves.isSelected()) {
                boxTodosLosDias.setSelected(true);
            }
        }
    }//GEN-LAST:event_boxMiercolesActionPerformed

    private void boxLunesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxLunesActionPerformed
        // TODO add your handling code here:
        if (!boxLunes.isSelected()) {
            boxTodosLosDias.setSelected(false);
        } else {
            if (boxViernes.isSelected() && boxMartes.isSelected() && boxMiercoles.isSelected() && boxJueves.isSelected()) {
                boxTodosLosDias.setSelected(true);
            }
        }
    }//GEN-LAST:event_boxLunesActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed

        if (!campoEE.getText().equals("")) {
            if (!campoHora.getText().equals("")) {
                if (!campoSalon.getText().equals("")) {
                    if (!campoDocente.getText().equals("")) {
                        if (boxLunes.isSelected() || boxMartes.isSelected() || boxMiercoles.isSelected() || boxJueves.isSelected() || boxViernes.isSelected()) {
                            Archivo archivo = new Archivo();
                            String boxSeleccionados = "";
                            if (boxTodosLosDias.isSelected()) {
                                boxSeleccionados = "Lunes,Martes,Miercoles,Jueves,Viernes";
                            } else {
                                if (boxLunes.isSelected()) {
                                    boxSeleccionados += "Lunes";
                                }
                                if (boxMartes.isSelected()) {
                                    boxSeleccionados += ",Martes";
                                }
                                if (boxMiercoles.isSelected()) {
                                    boxSeleccionados += ",Miercoles";
                                }
                                if (boxJueves.isSelected()) {
                                    boxSeleccionados += ",Jueves";
                                }
                                if (boxViernes.isSelected()) {
                                    boxSeleccionados += ",Viernes";
                                }
                            }

                            if (archivo.verificarHora(campoHora.getText(), boxSeleccionados)) {
                                Horario horario = new Horario();
                                archivo.modificarTexto("ExperienciasEducativas.txt", campoEE.getText() + "/" + campoDocente.getText());
                                String horarioCompleto = horario.crearFormatoRegistro(campoEE.getText(), campoHora.getText(), boxSeleccionados, campoSalon.getText());
                                System.out.println(horarioCompleto);
                                archivo.modificarTexto("Horario.txt", horarioCompleto);
                                actualizarTabla();
                            } else {
                                JOptionPane.showMessageDialog(this, "La hora y d√≠a ingresados No se encuentran disponibles");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguno de los D√≠as.","Error",JOptionPane.ERROR_MESSAGE);
                            //System.out.println("No se ha seleccionado ninguno de los D√≠as.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "No se ha ingresado el nombre del Docente.","Error",JOptionPane.ERROR_MESSAGE);
                        //System.out.println("No se ha ingresado el nombre del Docente.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se ha ingresado el n√∫mero de Sal√≥n.","Error",JOptionPane.ERROR_MESSAGE);
                    //System.out.println("No se ha ingresado el n√∫mero de Sal√≥n.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha  ingresado la hora de Clase.","Error",JOptionPane.ERROR_MESSAGE);
                //System.out.println("No se ha  ingresado la hora de Clase.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha ingresado el nombre de la Experiencia Educativa.","Error",JOptionPane.ERROR_MESSAGE);
            //System.out.println("No se ha ingresado el nombre de la Experiencia Educativa.");
        }

    }//GEN-LAST:event_botonAgregarActionPerformed

    private void actualizarTabla() {
        DefaultTableModel formatoHorario = (DefaultTableModel) tablaHorario.getModel();
        DefaultTableModel formatoEE = (DefaultTableModel) tablaEE.getModel();
        Archivo archivito = new Archivo();
        String horario[] = archivito.leerArchivo("Horario.txt");
        String experienciasEducativas[] = archivito.leerArchivo("ExperienciasEducativas.txt");
        formatoHorario.setRowCount(0);
        formatoEE.setRowCount(0);
        for (int i = 0; i < horario.length; i++) {
            formatoHorario.addRow(horario[i].split("/"));
        }
        for (int i = 0; i < experienciasEducativas.length; i++) {
            formatoEE.addRow(experienciasEducativas[i].split("/"));
        }
    }
    
    private String[] ordenamiento(String []horario){
        return null;
    }

    private void boxTodosLosDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxTodosLosDiasActionPerformed
        // TODO add your handling code here:
        if (boxTodosLosDias.isSelected()) {
            boxLunes.setSelected(true);
            boxMartes.setSelected(true);
            boxMiercoles.setSelected(true);
            boxJueves.setSelected(true);
            boxViernes.setSelected(true);
        }else{
            boxLunes.setSelected(false);
            boxMartes.setSelected(false);
            boxMiercoles.setSelected(false);
            boxJueves.setSelected(false);
            boxViernes.setSelected(false);
        }
    }//GEN-LAST:event_boxTodosLosDiasActionPerformed

    private void campoDocenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoDocenteMouseClicked
        // TODO add your handling code here:
        if (!campoEE.getText().equals("")) {
            String experienciaEducativa=campoEE.getText();
            Archivo archivo=new Archivo();
            String profesor = archivo.buscarRegistro(experienciaEducativa, "ExperienciasEducativas.txt");
            if (!profesor.equalsIgnoreCase("")) {
                campoDocente.setText(profesor.split("/")[1]);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Error, ingrese una experiencia educativa primero","Experiencia educativa",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_campoDocenteMouseClicked

    private void boxMartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxMartesActionPerformed
        // TODO add your handling code here:
        if (!boxMartes.isSelected()) {
            boxTodosLosDias.setSelected(false);
        } else {
            if (boxLunes.isSelected() && boxViernes.isSelected() && boxMiercoles.isSelected() && boxJueves.isSelected()) {
                boxTodosLosDias.setSelected(true);
            }
        }
    }//GEN-LAST:event_boxMartesActionPerformed

    private void boxJuevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxJuevesActionPerformed
        // TODO add your handling code here:
        if (!boxJueves.isSelected()) {
            boxTodosLosDias.setSelected(false);
        } else {
            if (boxLunes.isSelected() && boxMartes.isSelected() && boxMiercoles.isSelected() && boxViernes.isSelected()) {
                boxTodosLosDias.setSelected(true);
            }
        }
    }//GEN-LAST:event_boxJuevesActionPerformed

    private void boxViernesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxViernesActionPerformed
        // TODO add your handling code here:
        if (!boxViernes.isSelected()) {
            boxTodosLosDias.setSelected(false);
        } else {
            if (boxLunes.isSelected() && boxMartes.isSelected() && boxMiercoles.isSelected() && boxJueves.isSelected()) {
                boxTodosLosDias.setSelected(true);
            }
        }
    }//GEN-LAST:event_boxViernesActionPerformed

    private void campoHoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoHoraKeyTyped
        // TODO add your handling code here:
        char caracter=evt.getKeyChar();
        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
    }//GEN-LAST:event_campoHoraKeyTyped

    private void campoSalonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoSalonKeyTyped
        // TODO add your handling code here:
        char caracter=evt.getKeyChar();
        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
    }//GEN-LAST:event_campoSalonKeyTyped

    private void campoEEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEEKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (!Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_campoEEKeyTyped

    private void campoDocenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoDocenteKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (!Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_campoDocenteKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JCheckBox boxJueves;
    private javax.swing.JCheckBox boxLunes;
    private javax.swing.JCheckBox boxMartes;
    private javax.swing.JCheckBox boxMiercoles;
    private javax.swing.JCheckBox boxTodosLosDias;
    private javax.swing.JCheckBox boxViernes;
    private javax.swing.JTextField campoDocente;
    private javax.swing.JTextField campoEE;
    private javax.swing.JTextField campoHora;
    private javax.swing.JTextField campoSalon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaEE;
    private javax.swing.JTable tablaHorario;
    // End of variables declaration//GEN-END:variables
}
